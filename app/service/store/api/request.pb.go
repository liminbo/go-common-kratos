// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: request.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StoreListReq struct {
	Type                 int32    `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	DealerId             int32    `protobuf:"varint,2,opt,name=dealer_id,json=dealerId,proto3" json:"dealer_id,omitempty"`
	BrandId              int32    `protobuf:"varint,3,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	CityCode             int32    `protobuf:"varint,4,opt,name=city_code,json=cityCode,proto3" json:"city_code,omitempty"`
	DistrictId           int32    `protobuf:"varint,5,opt,name=district_id,json=districtId,proto3" json:"district_id,omitempty"`
	Location             string   `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	TagId                int32    `protobuf:"varint,7,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Order                int32    `protobuf:"varint,8,opt,name=order,proto3" json:"order,omitempty"`
	Page                 int32    `protobuf:"varint,9,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int32    `protobuf:"varint,10,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreListReq) Reset()         { *m = StoreListReq{} }
func (m *StoreListReq) String() string { return proto.CompactTextString(m) }
func (*StoreListReq) ProtoMessage()    {}
func (*StoreListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f73548e33e655fe, []int{0}
}
func (m *StoreListReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StoreListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StoreListReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StoreListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreListReq.Merge(m, src)
}
func (m *StoreListReq) XXX_Size() int {
	return m.Size()
}
func (m *StoreListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreListReq.DiscardUnknown(m)
}

var xxx_messageInfo_StoreListReq proto.InternalMessageInfo

func (m *StoreListReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *StoreListReq) GetDealerId() int32 {
	if m != nil {
		return m.DealerId
	}
	return 0
}

func (m *StoreListReq) GetBrandId() int32 {
	if m != nil {
		return m.BrandId
	}
	return 0
}

func (m *StoreListReq) GetCityCode() int32 {
	if m != nil {
		return m.CityCode
	}
	return 0
}

func (m *StoreListReq) GetDistrictId() int32 {
	if m != nil {
		return m.DistrictId
	}
	return 0
}

func (m *StoreListReq) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *StoreListReq) GetTagId() int32 {
	if m != nil {
		return m.TagId
	}
	return 0
}

func (m *StoreListReq) GetOrder() int32 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *StoreListReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *StoreListReq) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type StoreDetailReq struct {
	StoreId              int32    `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreDetailReq) Reset()         { *m = StoreDetailReq{} }
func (m *StoreDetailReq) String() string { return proto.CompactTextString(m) }
func (*StoreDetailReq) ProtoMessage()    {}
func (*StoreDetailReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f73548e33e655fe, []int{1}
}
func (m *StoreDetailReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StoreDetailReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StoreDetailReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StoreDetailReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreDetailReq.Merge(m, src)
}
func (m *StoreDetailReq) XXX_Size() int {
	return m.Size()
}
func (m *StoreDetailReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreDetailReq.DiscardUnknown(m)
}

var xxx_messageInfo_StoreDetailReq proto.InternalMessageInfo

func (m *StoreDetailReq) GetStoreId() int32 {
	if m != nil {
		return m.StoreId
	}
	return 0
}

type FuzzySearchStoreReq struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Order                int32    `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
	Page                 int32    `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int32    `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FuzzySearchStoreReq) Reset()         { *m = FuzzySearchStoreReq{} }
func (m *FuzzySearchStoreReq) String() string { return proto.CompactTextString(m) }
func (*FuzzySearchStoreReq) ProtoMessage()    {}
func (*FuzzySearchStoreReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f73548e33e655fe, []int{2}
}
func (m *FuzzySearchStoreReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FuzzySearchStoreReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FuzzySearchStoreReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FuzzySearchStoreReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FuzzySearchStoreReq.Merge(m, src)
}
func (m *FuzzySearchStoreReq) XXX_Size() int {
	return m.Size()
}
func (m *FuzzySearchStoreReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FuzzySearchStoreReq.DiscardUnknown(m)
}

var xxx_messageInfo_FuzzySearchStoreReq proto.InternalMessageInfo

func (m *FuzzySearchStoreReq) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *FuzzySearchStoreReq) GetOrder() int32 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *FuzzySearchStoreReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *FuzzySearchStoreReq) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type EditStoreReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type                 int32    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Level                int32    `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	Cover                string   `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	Images               string   `protobuf:"bytes,6,opt,name=images,proto3" json:"images,omitempty"`
	Videos               string   `protobuf:"bytes,7,opt,name=videos,proto3" json:"videos,omitempty"`
	BrandIds             string   `protobuf:"bytes,8,opt,name=brand_ids,json=brandIds,proto3" json:"brand_ids,omitempty"`
	DealerIds            string   `protobuf:"bytes,9,opt,name=dealer_ids,json=dealerIds,proto3" json:"dealer_ids,omitempty"`
	GaodeId              string   `protobuf:"bytes,10,opt,name=gaode_id,json=gaodeId,proto3" json:"gaode_id,omitempty"`
	ProvinceCode         int32    `protobuf:"varint,11,opt,name=province_code,json=provinceCode,proto3" json:"province_code,omitempty"`
	CityCode             int32    `protobuf:"varint,12,opt,name=city_code,json=cityCode,proto3" json:"city_code,omitempty"`
	AreaCode             int32    `protobuf:"varint,13,opt,name=area_code,json=areaCode,proto3" json:"area_code,omitempty"`
	Source               int32    `protobuf:"varint,14,opt,name=source,proto3" json:"source,omitempty"`
	TagIds               string   `protobuf:"bytes,15,opt,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	Address              string   `protobuf:"bytes,16,opt,name=address,proto3" json:"address,omitempty"`
	Tel                  string   `protobuf:"bytes,17,opt,name=tel,proto3" json:"tel,omitempty"`
	Gcj_02               string   `protobuf:"bytes,18,opt,name=gcj_02,json=gcj02,proto3" json:"gcj_02,omitempty"`
	Location             string   `protobuf:"bytes,19,opt,name=location,proto3" json:"location,omitempty"`
	DistrictId           int32    `protobuf:"varint,20,opt,name=district_id,json=districtId,proto3" json:"district_id,omitempty"`
	Wechat               string   `protobuf:"bytes,21,opt,name=wechat,proto3" json:"wechat,omitempty"`
	Introduction         string   `protobuf:"bytes,23,opt,name=introduction,proto3" json:"introduction,omitempty"`
	BrandNames           string   `protobuf:"bytes,24,opt,name=brand_names,json=brandNames,proto3" json:"brand_names,omitempty"`
	Styles               string   `protobuf:"bytes,25,opt,name=styles,proto3" json:"styles,omitempty"`
	Products             string   `protobuf:"bytes,26,opt,name=products,proto3" json:"products,omitempty"`
	PriceDescs           string   `protobuf:"bytes,27,opt,name=price_descs,json=priceDescs,proto3" json:"price_descs,omitempty"`
	BusinessTime         string   `protobuf:"bytes,28,opt,name=business_time,json=businessTime,proto3" json:"business_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditStoreReq) Reset()         { *m = EditStoreReq{} }
func (m *EditStoreReq) String() string { return proto.CompactTextString(m) }
func (*EditStoreReq) ProtoMessage()    {}
func (*EditStoreReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f73548e33e655fe, []int{3}
}
func (m *EditStoreReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EditStoreReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EditStoreReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EditStoreReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditStoreReq.Merge(m, src)
}
func (m *EditStoreReq) XXX_Size() int {
	return m.Size()
}
func (m *EditStoreReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EditStoreReq.DiscardUnknown(m)
}

var xxx_messageInfo_EditStoreReq proto.InternalMessageInfo

func (m *EditStoreReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *EditStoreReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *EditStoreReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *EditStoreReq) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *EditStoreReq) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *EditStoreReq) GetImages() string {
	if m != nil {
		return m.Images
	}
	return ""
}

func (m *EditStoreReq) GetVideos() string {
	if m != nil {
		return m.Videos
	}
	return ""
}

func (m *EditStoreReq) GetBrandIds() string {
	if m != nil {
		return m.BrandIds
	}
	return ""
}

func (m *EditStoreReq) GetDealerIds() string {
	if m != nil {
		return m.DealerIds
	}
	return ""
}

func (m *EditStoreReq) GetGaodeId() string {
	if m != nil {
		return m.GaodeId
	}
	return ""
}

func (m *EditStoreReq) GetProvinceCode() int32 {
	if m != nil {
		return m.ProvinceCode
	}
	return 0
}

func (m *EditStoreReq) GetCityCode() int32 {
	if m != nil {
		return m.CityCode
	}
	return 0
}

func (m *EditStoreReq) GetAreaCode() int32 {
	if m != nil {
		return m.AreaCode
	}
	return 0
}

func (m *EditStoreReq) GetSource() int32 {
	if m != nil {
		return m.Source
	}
	return 0
}

func (m *EditStoreReq) GetTagIds() string {
	if m != nil {
		return m.TagIds
	}
	return ""
}

func (m *EditStoreReq) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *EditStoreReq) GetTel() string {
	if m != nil {
		return m.Tel
	}
	return ""
}

func (m *EditStoreReq) GetGcj_02() string {
	if m != nil {
		return m.Gcj_02
	}
	return ""
}

func (m *EditStoreReq) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *EditStoreReq) GetDistrictId() int32 {
	if m != nil {
		return m.DistrictId
	}
	return 0
}

func (m *EditStoreReq) GetWechat() string {
	if m != nil {
		return m.Wechat
	}
	return ""
}

func (m *EditStoreReq) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *EditStoreReq) GetBrandNames() string {
	if m != nil {
		return m.BrandNames
	}
	return ""
}

func (m *EditStoreReq) GetStyles() string {
	if m != nil {
		return m.Styles
	}
	return ""
}

func (m *EditStoreReq) GetProducts() string {
	if m != nil {
		return m.Products
	}
	return ""
}

func (m *EditStoreReq) GetPriceDescs() string {
	if m != nil {
		return m.PriceDescs
	}
	return ""
}

func (m *EditStoreReq) GetBusinessTime() string {
	if m != nil {
		return m.BusinessTime
	}
	return ""
}

type DeleteStoreReq struct {
	StoreId              int32    `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteStoreReq) Reset()         { *m = DeleteStoreReq{} }
func (m *DeleteStoreReq) String() string { return proto.CompactTextString(m) }
func (*DeleteStoreReq) ProtoMessage()    {}
func (*DeleteStoreReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f73548e33e655fe, []int{4}
}
func (m *DeleteStoreReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteStoreReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteStoreReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteStoreReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteStoreReq.Merge(m, src)
}
func (m *DeleteStoreReq) XXX_Size() int {
	return m.Size()
}
func (m *DeleteStoreReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteStoreReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteStoreReq proto.InternalMessageInfo

func (m *DeleteStoreReq) GetStoreId() int32 {
	if m != nil {
		return m.StoreId
	}
	return 0
}

func init() {
	proto.RegisterType((*StoreListReq)(nil), "business.service.store.v1.StoreListReq")
	proto.RegisterType((*StoreDetailReq)(nil), "business.service.store.v1.StoreDetailReq")
	proto.RegisterType((*FuzzySearchStoreReq)(nil), "business.service.store.v1.FuzzySearchStoreReq")
	proto.RegisterType((*EditStoreReq)(nil), "business.service.store.v1.EditStoreReq")
	proto.RegisterType((*DeleteStoreReq)(nil), "business.service.store.v1.DeleteStoreReq")
}

func init() { proto.RegisterFile("request.proto", fileDescriptor_7f73548e33e655fe) }

var fileDescriptor_7f73548e33e655fe = []byte{
	// 672 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0xcf, 0x6e, 0x13, 0x3f,
	0x10, 0xfe, 0x25, 0x69, 0xfe, 0xec, 0x34, 0xed, 0xaf, 0xb8, 0x69, 0xeb, 0xb4, 0x10, 0xaa, 0x70,
	0xa9, 0x84, 0x14, 0xb5, 0xe5, 0x0d, 0xa0, 0x20, 0x45, 0x42, 0x1c, 0xb6, 0x9c, 0xb8, 0x44, 0xae,
	0x3d, 0x4a, 0x5d, 0x6d, 0xe2, 0xd4, 0x76, 0x16, 0x25, 0x8f, 0xc1, 0x89, 0x47, 0xe2, 0xc8, 0x23,
	0xa0, 0xf0, 0x22, 0xc8, 0xe3, 0xdd, 0x40, 0x03, 0x3d, 0xad, 0xbf, 0x6f, 0x76, 0xc6, 0x9f, 0x67,
	0x3e, 0x1b, 0x76, 0x2c, 0xde, 0xcf, 0xd1, 0xf9, 0xc1, 0xcc, 0x1a, 0x6f, 0x58, 0xf7, 0x66, 0xee,
	0xf4, 0x14, 0x9d, 0x1b, 0x38, 0xb4, 0xb9, 0x96, 0x38, 0x70, 0xde, 0x58, 0x1c, 0xe4, 0x17, 0xfd,
	0x2f, 0x55, 0x68, 0x5f, 0x07, 0xf0, 0x5e, 0x3b, 0x9f, 0xe2, 0x3d, 0x63, 0xb0, 0xe5, 0x17, 0x33,
	0xe4, 0x95, 0xd3, 0xca, 0x59, 0x3d, 0xa5, 0x35, 0x3b, 0x81, 0x44, 0xa1, 0xc8, 0xd0, 0x8e, 0xb4,
	0xe2, 0x55, 0x0a, 0xb4, 0x22, 0x31, 0x54, 0xac, 0x0b, 0xad, 0x1b, 0x2b, 0xa6, 0x2a, 0xc4, 0x6a,
	0x14, 0x6b, 0x12, 0x1e, 0xaa, 0x90, 0x27, 0xb5, 0x5f, 0x8c, 0xa4, 0x51, 0xc8, 0xb7, 0x62, 0x5e,
	0x20, 0xde, 0x18, 0x85, 0xec, 0x39, 0x6c, 0x2b, 0xed, 0xbc, 0xd5, 0xd2, 0x87, 0xd4, 0x3a, 0x85,
	0xa1, 0xa4, 0x86, 0x8a, 0x1d, 0x43, 0x2b, 0x33, 0x52, 0x78, 0x6d, 0xa6, 0xbc, 0x71, 0x5a, 0x39,
	0x4b, 0xd2, 0x35, 0x66, 0x07, 0xd0, 0xf0, 0x62, 0x1c, 0xf2, 0x9a, 0x94, 0x57, 0xf7, 0x62, 0x3c,
	0x54, 0xac, 0x03, 0x75, 0x63, 0x15, 0x5a, 0xde, 0x8a, 0x2c, 0x81, 0x70, 0xa4, 0x99, 0x18, 0x23,
	0x4f, 0xe2, 0x91, 0xc2, 0x3a, 0x48, 0x0b, 0xdf, 0x91, 0xd3, 0x4b, 0xe4, 0x10, 0xa5, 0x05, 0xe2,
	0x5a, 0x2f, 0xb1, 0xff, 0x12, 0x76, 0xa9, 0x27, 0x57, 0xe8, 0x85, 0xce, 0x42, 0x57, 0xba, 0xd0,
	0xa2, 0x96, 0x85, 0x1d, 0x63, 0x67, 0x9a, 0x84, 0x87, 0xaa, 0x6f, 0x61, 0xff, 0xdd, 0x7c, 0xb9,
	0x5c, 0x5c, 0xa3, 0xb0, 0xf2, 0x96, 0xf2, 0x42, 0x46, 0x07, 0xea, 0xf7, 0x73, 0xb4, 0x0b, 0xfa,
	0x3d, 0x49, 0x23, 0xf8, 0x2d, 0xb0, 0xfa, 0x2f, 0x81, 0xb5, 0xc7, 0x04, 0x6e, 0x6d, 0x08, 0x5c,
	0xd5, 0xa1, 0xfd, 0x56, 0x69, 0xbf, 0xde, 0x6d, 0x17, 0xaa, 0xc3, 0x52, 0x59, 0x35, 0x36, 0xc2,
	0x6b, 0x9f, 0x21, 0xed, 0x93, 0xa4, 0x11, 0xac, 0x67, 0x5b, 0xfb, 0x63, 0xb6, 0x1d, 0xa8, 0x67,
	0x98, 0x63, 0x56, 0xec, 0x11, 0x41, 0x60, 0xa5, 0xc9, 0xd1, 0xd2, 0x58, 0x92, 0x34, 0x02, 0x76,
	0x08, 0x0d, 0x3d, 0x11, 0x63, 0x74, 0xc5, 0x3c, 0x0a, 0x14, 0xf8, 0x5c, 0x2b, 0x34, 0x8e, 0xa6,
	0x91, 0xa4, 0x05, 0x0a, 0x67, 0x28, 0xad, 0xe1, 0x68, 0x24, 0x49, 0xda, 0x2a, 0xbc, 0xe1, 0xd8,
	0x33, 0x80, 0xb5, 0xa9, 0x1c, 0xcd, 0x26, 0x49, 0x93, 0xd2, 0x55, 0x2e, 0x74, 0x7c, 0x2c, 0x8c,
	0xa2, 0x8e, 0x03, 0x05, 0x9b, 0x84, 0x87, 0x8a, 0xbd, 0x80, 0x9d, 0x99, 0x35, 0xb9, 0x9e, 0x4a,
	0x8c, 0xd6, 0xda, 0x26, 0xe9, 0xed, 0x92, 0x24, 0x7b, 0x3d, 0xf0, 0x5e, 0x7b, 0xc3, 0x7b, 0x27,
	0x90, 0x08, 0x8b, 0x22, 0x06, 0x77, 0x62, 0x30, 0x10, 0x14, 0x3c, 0x84, 0x86, 0x33, 0x73, 0x2b,
	0x91, 0xef, 0x52, 0xa4, 0x40, 0xec, 0x08, 0x9a, 0xd1, 0x73, 0x8e, 0xff, 0x1f, 0x8f, 0x49, 0xa6,
	0x73, 0x8c, 0x43, 0x53, 0x28, 0x65, 0xd1, 0x39, 0xbe, 0x17, 0x95, 0x16, 0x90, 0xed, 0x41, 0xcd,
	0x63, 0xc6, 0x9f, 0x10, 0x1b, 0x96, 0xc1, 0xb8, 0x63, 0x79, 0x37, 0x3a, 0xbf, 0xe4, 0x2c, 0x76,
	0x76, 0x2c, 0xef, 0xce, 0x2f, 0x1f, 0x78, 0x7d, 0x7f, 0xc3, 0xeb, 0x1b, 0x17, 0xa5, 0xf3, 0xd7,
	0x45, 0x39, 0x84, 0xc6, 0x67, 0x94, 0xb7, 0xc2, 0xf3, 0x83, 0xa8, 0x2b, 0x22, 0xd6, 0x87, 0xb6,
	0x9e, 0x7a, 0x6b, 0xd4, 0x5c, 0x52, 0xe1, 0x23, 0x8a, 0x3e, 0xe0, 0x42, 0xf1, 0x38, 0xa2, 0xa9,
	0x98, 0xa0, 0xe3, 0x9c, 0x7e, 0x01, 0xa2, 0x3e, 0x04, 0x86, 0xba, 0xe1, 0x17, 0x19, 0x3a, 0xde,
	0x8d, 0xc5, 0x23, 0x0a, 0x8a, 0x67, 0xb1, 0x8c, 0xe3, 0xc7, 0x51, 0x71, 0x89, 0x43, 0xd1, 0x99,
	0xd5, 0x12, 0x47, 0x0a, 0x9d, 0x74, 0xfc, 0x24, 0x16, 0x25, 0xea, 0x2a, 0x30, 0x61, 0x82, 0xe5,
	0x93, 0x34, 0xf2, 0x7a, 0x82, 0xfc, 0x69, 0x94, 0x56, 0x92, 0x1f, 0xf5, 0x84, 0x6e, 0xe1, 0x15,
	0x66, 0xe8, 0x71, 0xed, 0xf2, 0xc7, 0x6f, 0xe1, 0xeb, 0xce, 0xb7, 0x55, 0xaf, 0xf2, 0x7d, 0xd5,
	0xab, 0xfc, 0x58, 0xf5, 0x2a, 0x5f, 0x7f, 0xf6, 0xfe, 0xfb, 0x54, 0xcd, 0x2f, 0x6e, 0x1a, 0xf4,
	0xfe, 0xbd, 0xfa, 0x15, 0x00, 0x00, 0xff, 0xff, 0x51, 0x86, 0xb6, 0x4a, 0x10, 0x05, 0x00, 0x00,
}

func (m *StoreListReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StoreListReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StoreListReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageSize != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x50
	}
	if m.Page != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x48
	}
	if m.Order != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.Order))
		i--
		dAtA[i] = 0x40
	}
	if m.TagId != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.TagId))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Location) > 0 {
		i -= len(m.Location)
		copy(dAtA[i:], m.Location)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.Location)))
		i--
		dAtA[i] = 0x32
	}
	if m.DistrictId != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.DistrictId))
		i--
		dAtA[i] = 0x28
	}
	if m.CityCode != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.CityCode))
		i--
		dAtA[i] = 0x20
	}
	if m.BrandId != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.BrandId))
		i--
		dAtA[i] = 0x18
	}
	if m.DealerId != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.DealerId))
		i--
		dAtA[i] = 0x10
	}
	if m.Type != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *StoreDetailReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StoreDetailReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StoreDetailReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.StoreId != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.StoreId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *FuzzySearchStoreReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FuzzySearchStoreReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FuzzySearchStoreReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageSize != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x20
	}
	if m.Page != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x18
	}
	if m.Order != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.Order))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Query) > 0 {
		i -= len(m.Query)
		copy(dAtA[i:], m.Query)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.Query)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EditStoreReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EditStoreReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EditStoreReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.BusinessTime) > 0 {
		i -= len(m.BusinessTime)
		copy(dAtA[i:], m.BusinessTime)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.BusinessTime)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe2
	}
	if len(m.PriceDescs) > 0 {
		i -= len(m.PriceDescs)
		copy(dAtA[i:], m.PriceDescs)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.PriceDescs)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xda
	}
	if len(m.Products) > 0 {
		i -= len(m.Products)
		copy(dAtA[i:], m.Products)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.Products)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd2
	}
	if len(m.Styles) > 0 {
		i -= len(m.Styles)
		copy(dAtA[i:], m.Styles)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.Styles)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xca
	}
	if len(m.BrandNames) > 0 {
		i -= len(m.BrandNames)
		copy(dAtA[i:], m.BrandNames)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.BrandNames)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	if len(m.Introduction) > 0 {
		i -= len(m.Introduction)
		copy(dAtA[i:], m.Introduction)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.Introduction)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xba
	}
	if len(m.Wechat) > 0 {
		i -= len(m.Wechat)
		copy(dAtA[i:], m.Wechat)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.Wechat)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	if m.DistrictId != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.DistrictId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	if len(m.Location) > 0 {
		i -= len(m.Location)
		copy(dAtA[i:], m.Location)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.Location)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if len(m.Gcj_02) > 0 {
		i -= len(m.Gcj_02)
		copy(dAtA[i:], m.Gcj_02)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.Gcj_02)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if len(m.Tel) > 0 {
		i -= len(m.Tel)
		copy(dAtA[i:], m.Tel)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.Tel)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.TagIds) > 0 {
		i -= len(m.TagIds)
		copy(dAtA[i:], m.TagIds)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.TagIds)))
		i--
		dAtA[i] = 0x7a
	}
	if m.Source != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.Source))
		i--
		dAtA[i] = 0x70
	}
	if m.AreaCode != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.AreaCode))
		i--
		dAtA[i] = 0x68
	}
	if m.CityCode != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.CityCode))
		i--
		dAtA[i] = 0x60
	}
	if m.ProvinceCode != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.ProvinceCode))
		i--
		dAtA[i] = 0x58
	}
	if len(m.GaodeId) > 0 {
		i -= len(m.GaodeId)
		copy(dAtA[i:], m.GaodeId)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.GaodeId)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.DealerIds) > 0 {
		i -= len(m.DealerIds)
		copy(dAtA[i:], m.DealerIds)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.DealerIds)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.BrandIds) > 0 {
		i -= len(m.BrandIds)
		copy(dAtA[i:], m.BrandIds)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.BrandIds)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Videos) > 0 {
		i -= len(m.Videos)
		copy(dAtA[i:], m.Videos)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.Videos)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Images) > 0 {
		i -= len(m.Images)
		copy(dAtA[i:], m.Images)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.Images)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Level != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.Level))
		i--
		dAtA[i] = 0x20
	}
	if m.Type != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DeleteStoreReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteStoreReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteStoreReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.StoreId != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.StoreId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintRequest(dAtA []byte, offset int, v uint64) int {
	offset -= sovRequest(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *StoreListReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovRequest(uint64(m.Type))
	}
	if m.DealerId != 0 {
		n += 1 + sovRequest(uint64(m.DealerId))
	}
	if m.BrandId != 0 {
		n += 1 + sovRequest(uint64(m.BrandId))
	}
	if m.CityCode != 0 {
		n += 1 + sovRequest(uint64(m.CityCode))
	}
	if m.DistrictId != 0 {
		n += 1 + sovRequest(uint64(m.DistrictId))
	}
	l = len(m.Location)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	if m.TagId != 0 {
		n += 1 + sovRequest(uint64(m.TagId))
	}
	if m.Order != 0 {
		n += 1 + sovRequest(uint64(m.Order))
	}
	if m.Page != 0 {
		n += 1 + sovRequest(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovRequest(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StoreDetailReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StoreId != 0 {
		n += 1 + sovRequest(uint64(m.StoreId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FuzzySearchStoreReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	if m.Order != 0 {
		n += 1 + sovRequest(uint64(m.Order))
	}
	if m.Page != 0 {
		n += 1 + sovRequest(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovRequest(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EditStoreReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovRequest(uint64(m.Id))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovRequest(uint64(m.Type))
	}
	if m.Level != 0 {
		n += 1 + sovRequest(uint64(m.Level))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	l = len(m.Images)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	l = len(m.Videos)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	l = len(m.BrandIds)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	l = len(m.DealerIds)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	l = len(m.GaodeId)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	if m.ProvinceCode != 0 {
		n += 1 + sovRequest(uint64(m.ProvinceCode))
	}
	if m.CityCode != 0 {
		n += 1 + sovRequest(uint64(m.CityCode))
	}
	if m.AreaCode != 0 {
		n += 1 + sovRequest(uint64(m.AreaCode))
	}
	if m.Source != 0 {
		n += 1 + sovRequest(uint64(m.Source))
	}
	l = len(m.TagIds)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 2 + l + sovRequest(uint64(l))
	}
	l = len(m.Tel)
	if l > 0 {
		n += 2 + l + sovRequest(uint64(l))
	}
	l = len(m.Gcj_02)
	if l > 0 {
		n += 2 + l + sovRequest(uint64(l))
	}
	l = len(m.Location)
	if l > 0 {
		n += 2 + l + sovRequest(uint64(l))
	}
	if m.DistrictId != 0 {
		n += 2 + sovRequest(uint64(m.DistrictId))
	}
	l = len(m.Wechat)
	if l > 0 {
		n += 2 + l + sovRequest(uint64(l))
	}
	l = len(m.Introduction)
	if l > 0 {
		n += 2 + l + sovRequest(uint64(l))
	}
	l = len(m.BrandNames)
	if l > 0 {
		n += 2 + l + sovRequest(uint64(l))
	}
	l = len(m.Styles)
	if l > 0 {
		n += 2 + l + sovRequest(uint64(l))
	}
	l = len(m.Products)
	if l > 0 {
		n += 2 + l + sovRequest(uint64(l))
	}
	l = len(m.PriceDescs)
	if l > 0 {
		n += 2 + l + sovRequest(uint64(l))
	}
	l = len(m.BusinessTime)
	if l > 0 {
		n += 2 + l + sovRequest(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteStoreReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StoreId != 0 {
		n += 1 + sovRequest(uint64(m.StoreId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovRequest(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRequest(x uint64) (n int) {
	return sovRequest(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *StoreListReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StoreListReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StoreListReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DealerId", wireType)
			}
			m.DealerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DealerId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BrandId", wireType)
			}
			m.BrandId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BrandId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CityCode", wireType)
			}
			m.CityCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CityCode |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DistrictId", wireType)
			}
			m.DistrictId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DistrictId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagId", wireType)
			}
			m.TagId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TagId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Order", wireType)
			}
			m.Order = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Order |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequest
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StoreDetailReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StoreDetailReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StoreDetailReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StoreId", wireType)
			}
			m.StoreId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StoreId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequest
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FuzzySearchStoreReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FuzzySearchStoreReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FuzzySearchStoreReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Order", wireType)
			}
			m.Order = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Order |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequest
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EditStoreReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EditStoreReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EditStoreReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			m.Level = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Level |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Images", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Images = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Videos", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Videos = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BrandIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BrandIds = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DealerIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DealerIds = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GaodeId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GaodeId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProvinceCode", wireType)
			}
			m.ProvinceCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProvinceCode |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CityCode", wireType)
			}
			m.CityCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CityCode |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AreaCode", wireType)
			}
			m.AreaCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AreaCode |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			m.Source = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Source |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TagIds = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gcj_02", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Gcj_02 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DistrictId", wireType)
			}
			m.DistrictId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DistrictId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wechat", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Wechat = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Introduction", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Introduction = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BrandNames", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BrandNames = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Styles", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Styles = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Products", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Products = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PriceDescs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PriceDescs = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 28:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BusinessTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BusinessTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequest
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteStoreReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteStoreReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteStoreReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StoreId", wireType)
			}
			m.StoreId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StoreId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequest
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRequest(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRequest
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRequest
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRequest
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRequest
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRequest        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRequest          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRequest = fmt.Errorf("proto: unexpected end of group")
)
